import { AfterViewInit, Component, ViewChild } from '@angular/core';
import { MatPaginator } from '@angular/material/paginator';
import { MatSort } from '@angular/material/sort';
import { MatTableDataSource } from '@angular/material/table';
import { ColDef, GridApi, GridReadyEvent } from 'ag-grid-community';

// export interface PeriodicElement {
//   name: string;
//   position: number;
//   weight: number;
//   symbol: string;
//   ceva: string;
//   b: string;
//   c: string;
//   d: string;
//   e: string;
//   f: string;
//   g: string;
//   h: string;
//   i: string;
//   j: string;
//   k: string;
// }

// const ELEMENT_DATA: PeriodicElement[] = [
//   {
//     position: 1,
//     name: 'Hydrogen',
//     weight: 1.0079,
//     symbol: 'H',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 2,
//     name: 'Helium',
//     weight: 4.0026,
//     symbol: 'He',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 3,
//     name: 'Lithium',
//     weight: 6.941,
//     symbol: 'Li',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 4,
//     name: 'Beryllium',
//     weight: 9.0122,
//     symbol: 'Be',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 5,
//     name: 'Boron',
//     weight: 10.811,
//     symbol: 'B',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 6,
//     name: 'Carbon',
//     weight: 12.0107,
//     symbol: 'C',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 7,
//     name: 'Nitrogen',
//     weight: 14.0067,
//     symbol: 'N',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 8,
//     name: 'Oxygen',
//     weight: 15.9994,
//     symbol: 'O',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 9,
//     name: 'Fluorine',
//     weight: 18.9984,
//     symbol: 'F',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 10,
//     name: 'Neon',
//     weight: 20.1797,
//     symbol: 'Ne',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 11,
//     name: 'Sodium',
//     weight: 22.9897,
//     symbol: 'Na',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 12,
//     name: 'Magnesium',
//     weight: 24.305,
//     symbol: 'Mg',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 13,
//     name: 'Aluminum',
//     weight: 26.9815,
//     symbol: 'Al',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 14,
//     name: 'Silicon',
//     weight: 28.0855,
//     symbol: 'Si',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 15,
//     name: 'Phosphorus',
//     weight: 30.9738,
//     symbol: 'P',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 16,
//     name: 'Sulfur',
//     weight: 32.065,
//     symbol: 'S',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 17,
//     name: 'Chlorine',
//     weight: 35.453,
//     symbol: 'Cl',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'Agagj',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 18,
//     name: 'Argon',
//     weight: 39.948,
//     symbol: 'Ar',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 19,
//     name: 'Potassium',
//     weight: 39.0983,
//     symbol: 'K',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
//   {
//     position: 20,
//     name: 'Calcium',
//     weight: 40.078,
//     symbol: 'Ca',
//     ceva: 'H',
//     b: 'A',
//     c: 'A',
//     d: 'A',
//     e: 'A',
//     f: 'A',
//     g: 'A',
//     h: 'A',
//     i: 'A',
//     j: 'A',
//     k: 'K',
//   },
// ];

export interface Data {
  make: string;
  model: string;
  price: number;
}

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.sass'],
})
export class AppComponent {
  public gridApi!: GridApi<Data>;
  title = 'test-app';
  // displayedColumns: string[] = [
  //   'position',
  //   'name',
  //   'weight',
  //   'symbol',
  //   'ceva',
  //   'b',
  //   'c',
  //   'd',
  //   'e',
  //   'f',
  //   'g',
  //   'h',
  //   'i',
  //   'j',
  //   'k',
  //   'options',
  // ];
  // dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);

  columnDefs: ColDef[] = [
    { field: 'make', sortable: true, filter: true },
    { field: 'model' },
    { field: 'price' },
  ];

  rowData: Data[] = [
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
    { make: 'Toyota', model: 'Celica', price: 35000 },
    { make: 'Ford', model: 'Mondeo', price: 32000 },
    { make: 'Porsche', model: 'Boxster', price: 72000 },
  ];
  selected: any = '';
  rowSelection: 'single' = 'single';

  onSelectionChanged() {
    const selectedRows = this.gridApi.getSelectedRows();
    console.log(selectedRows[0].make);
    // (document.querySelector('#selectedRows') as any).innerHTML =
    //   selectedRows.length === 1 ? selectedRows[0] : '';
    this.selected = selectedRows.length === 1 ? selectedRows[0].make : '';
  }
  onGridReady(params: GridReadyEvent<Data>) {
    this.gridApi = params.api;
  }
}
